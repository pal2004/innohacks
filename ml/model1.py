# -*- coding: utf-8 -*-
"""Book(1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13wtd42eWI3EGRVz5xe0phUM88e3kNUfn
"""

import numpy as np
import pandas as pd

df=pd.read_csv('./Book1-_1_.csv')

df.head()

# @title Date and Time vs Event ID

from matplotlib import pyplot as plt
import seaborn as sns
def _plot_series(series, series_name, series_index=0):
  palette = list(sns.palettes.mpl_palette('Dark2'))
  xs = series['Date and Time']
  ys = series['Event ID']

  plt.plot(xs, ys, label=series_name, color=palette[series_index % len(palette)])

fig, ax = plt.subplots(figsize=(10, 5.2), layout='constrained')
df_sorted = df.sort_values('Date and Time', ascending=True)
for i, (series_name, series) in enumerate(df_sorted.groupby('Keywords')):
  _plot_series(series, series_name, i)
  fig.legend(title='Keywords', bbox_to_anchor=(1, 1), loc='upper left')
sns.despine(fig=fig, ax=ax)
plt.xlabel('Date and Time')
_ = plt.ylabel('Event ID')

# df.tail()

# df.info()

# df.shape

# pip install nltk

import nltk
nltk.download('punkt')

import pandas as pd
from nltk.tokenize import word_tokenize

def find_crypto_key_events(df):
    crypto_key_events = []
    for index, row in df.iterrows():
        description = row['Description']
        # Tokenize the description
        tokens = word_tokenize(description)
        # Check if 'key' is found in the tokens
        if any(token.lower() in ('key') for token in tokens):
            crypto_key_events.append((index, row['Event ID']))
    return crypto_key_events


crypto_key_events = find_crypto_key_events(df)
print("Event IDs with 'key' in the description column:")
for row_number, event_id in crypto_key_events:
    print(f"Row {row_number + 1}: Event ID {event_id}")



